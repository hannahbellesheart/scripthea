<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
	xmlns:editing="clr-namespace:ICSharpCode.AvalonEdit.Editing;assembly=ICSharpCode.AvalonEdit"
	xmlns:local="clr-namespace:TextEditLib"
	xmlns:rendering="clr-namespace:ICSharpCode.AvalonEdit.Rendering;assembly=ICSharpCode.AvalonEdit"
	xmlns:unit="clr-namespace:UnitComboLib;assembly=UnitComboLib">

	<Style TargetType="{x:Type local:TextEdit}">
		<Setter Property="FlowDirection" Value="LeftToRight" />
		<Setter Property="Background" Value="White" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="LineNumbersForeground" Value="Black" />
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu>
					<MenuItem Command="Cut" Header="Cut">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Cut}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Copy" Header="Copy">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Copy}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Paste" Header="Paste">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Paste}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Delete" Header="Delete">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Delete}" />
						</MenuItem.Icon>
					</MenuItem>

					<Separator />

					<MenuItem Command="Undo" Header="Undo">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Undo}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Redo" Header="Redo">
						<MenuItem.Icon>
							<Image
								Height="16"
								SnapsToDevicePixels="True"
								Source="{DynamicResource Image_Redo}" />
						</MenuItem.Icon>
					</MenuItem>
				</ContextMenu>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:TextEdit}">
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type rendering:TextView}">
							<Setter Property="NonPrintableCharacterBrush" Value="#3F8080FF" />
							<Setter Property="LinkTextForegroundBrush" Value="#FF4040FF" />
							<!--  Style hyperlink displayed within text in text editor  -->
							<Setter Property="LinkTextBackgroundBrush" Value="White" />
						</Style>

						<Style TargetType="{x:Type editing:TextArea}">
							<Setter Property="FocusVisualStyle" Value="{x:Null}" />
							<Setter Property="SelectionBrush" Value="#1ba1e2" />
							<Setter Property="SelectionBorder">
								<Setter.Value>
									<Pen Brush="#1ba1e2" Thickness="1" />
								</Setter.Value>
							</Setter>
							<Setter Property="SelectionCornerRadius" Value="0" />
							<Setter Property="SelectionForeground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type editing:TextArea}">
										<DockPanel Focusable="False">
											<ItemsControl
												DockPanel.Dock="Left"
												Focusable="False"
												ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LeftMargins}">
												<ItemsControl.ItemsPanel>
													<ItemsPanelTemplate>
														<StackPanel Orientation="Horizontal" />
													</ItemsPanelTemplate>
												</ItemsControl.ItemsPanel>
											</ItemsControl>
											<ContentPresenter
												Panel.ZIndex="-1"
												Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextView}"
												Focusable="False" />
										</DockPanel>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer
							Name="PART_ScrollViewer"
							Padding="{TemplateBinding Padding}"
							HorizontalContentAlignment="Left"
							VerticalContentAlignment="Top"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CanContentScroll="True"
							Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextArea}"
							Focusable="False"
							HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
							VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Border
										HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										VerticalAlignment="{TemplateBinding VerticalAlignment}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}">
										<Grid
											HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
											VerticalAlignment="{TemplateBinding VerticalAlignment}"
											Background="{TemplateBinding Background}">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="Auto" />
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="*" />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>

											<!--  Display TextEditor content in upper left corner  -->
											<ScrollContentPresenter
												Grid.Row="0"
												Grid.Column="0"
												CanContentScroll="True"
												CanHorizontallyScroll="True"
												CanVerticallyScroll="True"
												Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:TextEdit}}, Path=TextArea}"
												KeyboardNavigation.DirectionalNavigation="Local" />

											<!--  Display Vertical Scrollbar to the right  -->
											<ScrollBar
												Name="PART_VerticalScrollBar"
												Grid.Column="1"
												Maximum="{TemplateBinding ScrollableHeight}"
												ViewportSize="{TemplateBinding ViewportHeight}"
												Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
												Value="{TemplateBinding VerticalOffset}" />

											<!--  Display mini-toolbar and Horizontal scrollbar at the bottom of the view  -->
											<!--  Using DialogBackgroundBrush since Editor can use a WPF Theme independent background color  -->
											<!--  TODO XXX Background="{DynamicResource DialogBackgroundBrush}"  -->
											<Grid Grid.Row="1" Grid.Column="0">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<unit:UnitCombobox
													Grid.Column="0"
													Margin="3,0"
													Padding="0"
													HorizontalAlignment="Stretch"
													VerticalAlignment="Top"
													BorderBrush="Transparent"
													BorderThickness="1"
													DataContext="{Binding SizeUnitLabel}"
													FontSize="12"
													IsEditable="True"
													ItemsSource="{Binding SelectedItem.DefaultValues}"
													ToolTip="{Binding ValueTip}">
													<unit:UnitCombobox.Text>
														<Binding
															Mode="TwoWay"
															Path="StringValue"
															ValidatesOnDataErrors="True" />
													</unit:UnitCombobox.Text>
												</unit:UnitCombobox>

												<ScrollBar
													Name="PART_HorizontalScrollBar"
													Grid.Column="1"
													Maximum="{TemplateBinding ScrollableWidth}"
													Orientation="Horizontal"
													ViewportSize="{TemplateBinding ViewportWidth}"
													Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
													Value="{TemplateBinding HorizontalOffset}" />
											</Grid>
											<!--  Using DialogBackgroundBrush since Editor can use a WPF Theme independent background color  -->
											<DockPanel
												Grid.Row="1"
												Grid.Column="1"
												Background="White"
												LastChildFill="false">
												<Rectangle
													Width="1"
													DockPanel.Dock="Left"
													Fill="White"
													Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
												<Rectangle
													Height="1"
													DockPanel.Dock="Top"
													Fill="White"
													Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
											</DockPanel>
										</Grid>
									</Border>
								</ControlTemplate>
							</ScrollViewer.Template>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WordWrap" Value="True">
							<Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>